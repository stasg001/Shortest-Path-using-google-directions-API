import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.0'
    }
}

plugins {
    id 'com.github.sherter.google-java-format' version '0.6'
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

group = 'com.google.maps'
sourceCompatibility = 1.7

repositories {
    mavenCentral()
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

dependencies {
    compile 'com.google.code.gson:gson:2.8.1'
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    compile 'joda-time:joda-time:2.9.9'
    compileOnly 'com.google.appengine:appengine-api-1.0-sdk:1.9.54'
    compile 'org.slf4j:slf4j-api:1.7.25'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'com.squareup.okhttp3:mockwebserver:3.8.1'
    testCompile 'org.apache.httpcomponents:httpclient:4.5.3'
    testCompile 'org.slf4j:slf4j-simple:1.7.25'
    testCompile 'commons-lang:commons-lang:2.6'
    testCompile 'org.json:json:20170516'
}

task updateVersion(type: Copy) {
    from('src') into "build/filtered/src"
    filter(ReplaceTokens, tokens: [VERSION: project.version])
}
compileJava.source = "build/filtered/src/main/java"
compileJava.dependsOn updateVersion

compileJava {
    options.compilerArgs << "-Xlint:deprecation"
}

compileTestJava {
    options.compilerArgs << "-Xlint:deprecation"
}

// Propagate API Key system properties to test tasks
tasks.withType(Test) {
    systemProperty 'api.key', System.getProperty('api.key')
    systemProperty 'client.id', System.getProperty('client.id')
    systemProperty 'client.secret', System.getProperty('client.secret')
}

javadoc {
    exclude '**/internal/**'
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.artifactId = 'google-maps-services'
            pom.project {
                name 'Java Client for Google Maps Services'
                packaging 'jar'
                description 'Use the Google Maps API Web Services in Java! ' +
                    'https://developers.google.com/maps/documentation/webservices/'
                url 'https://github.com/googlemaps/google-maps-services-java'

                scm {
                    url 'scm:git@github.com:googlemaps/google-maps-services-java.git'
                    connection 'scm:git@github.com:googlemaps/google-maps-services-java.git'
                    developerConnection 'scm:git@github.com:googlemaps/google-maps-services-java.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'markmcd'
                        name 'Mark McDonald'
                        url 'https://google.com/+MarkMcDonald0'
                    }
                    developer {
                        id 'domesticmouse'
                        name 'Brett Morgan'
                        url 'https://google.com/+BrettMorgan'
                    }
                    developer {
                        id 'broady'
                        name 'Chris Broadfoot'
                        url 'https://google.com/+ChristopherBroadfoot'
                    }
                }
            }
        }
    }
}

if (ext.'signing.secretKeyRingFile') {
    signing {
        sign configurations.archives
    }
}
